{"name":"Apache-websocket","tagline":"Apache WebSocket module","body":"# apache-websocket\r\n\r\nThe apache-websocket module is an Apache 2.x server module that may be used to\r\nprocess requests using the WebSocket protocol (RFC 6455) by an Apache 2.x\r\nserver. The module consists of a plugin architecture for handling WebSocket\r\nmessaging. Doing so does _not_ require any knowledge of internal Apache\r\nstructures.\r\n\r\nThis implementation supports protocol versions 7, 8, and 13, along with the\r\nolder draft-76 of the WebSocket protocol. Support for draft-75 is disabled by\r\ndefault, but it may be enabled through the draft-76 module configuration.\r\n\r\nDue to the extensive differences between the newer drafts and draft-76\r\nimplementations, and because of the Apache module architecture, two separate\r\nmodules are used to support the different protocols.\r\n\r\nAlthough draft-76 is technically obsolete, it is the protocol version that is\r\ncurrently implemented by most of the web browsers. When all of the browsers\r\nfinally move to support the latest protocol, simply remove the draft-76 module\r\nand configuration to drop support.\r\n\r\n## Download\r\n\r\n    $ git clone git://github.com/disconnect/apache-websocket.git\r\n\r\n## Building and Installation\r\n\r\nSCons may be used to build the module.\r\n\r\n    $ scons\r\n    $ sudo scons install\r\n\r\nFor Windows, do not include the word `sudo` when installing the module. Also,\r\nthe `SConstruct` file is hard-coded to look for the Apache headers and\r\nlibraries in `C:\\Program Files\\Apache Software Foundation\\Apache2.2`. You\r\nwill need to install the headers and libraries when installing Apache. The\r\n`Build Headers and Libraries` option is disabled by default, so you will have\r\nto perform a `Custom` installation of Apache. Refer to the Apache document\r\nentitled _Using Apache HTTP Server on Microsoft Windows_ for more information.\r\n\r\nAlternatively, you may use `apxs` to build and install the module. Under Linux\r\n(at least under Ubuntu), use:\r\n\r\n    $ sudo apxs2 -i -a -c mod_websocket.c\r\n    $ sudo apxs2 -i -a -c mod_websocket_draft76.c\r\n\r\nYou probably only want to use the `-a` option the first time you issue the\r\ncommand, as it may overwrite your configuration each time you execute it (see\r\nbelow).\r\n\r\nYou may use `apxs` under Mac OS X if you do not want to use SCons. In that\r\ncase, use:\r\n\r\n    $ sudo apxs -i -a -c mod_websocket.c\r\n    $ sudo apxs -i -a -c mod_websocket_draft76.c\r\n\r\n## Plugins\r\n\r\nWhile the module is used to handle the WebSocket protocol, plugins are used to\r\nimplement the application-specific handling of WebSocket messages.\r\n\r\nA plugin need only have one function exported that returns a pointer to an\r\ninitialized `WebSocketPlugin` structure. The `WebSocketPlugin` structure\r\nconsists of the structure size, structure version, and several function\r\npointers. The size should be set to the `sizeof` the `WebSocketPlugin`\r\nstructure, the version should be set to 0, and the function pointers should be\r\nset to point to the various functions that will service the requests. The only\r\nrequired function is the `on_message` function for handling incoming messages.\r\n\r\nSee `examples/mod_websocket_echo.c` for a simple example implementation of an\r\n\"echo\" plugin. A sample `client.html` is included as well. If you try it and\r\nyou get a message that says Connection Closed, you are likely using a client\r\nthat does not support these versions of the protocol.\r\n\r\nA more extensive example may be found in\r\n`examples/mod_websocket_dumb_increment.c`. That plugin implements the\r\ndumb-increment-protocol (see libwebsockets by Andy Green for more information\r\non the protocol). There is a test client for testing the module in\r\n`increment.html`. It uses the WebSocket client API which supports passing\r\nsupported protocols in the WebSocket constructor. If your browser does not\r\nsupport this, either upgrade your browser or modify the plugin so that it\r\ndoesn't verify the protocol.\r\n\r\nIf you provide an `on_connect` function, return a non-null value to accept the\r\nconnection, and null if you wish to decline the connection. The return value\r\nwill be passed to your other methods for that connection. During your\r\n`on_connect` function, you may access the Apache `request_rec` structure if you\r\nwish. You will have to include the appropriate Apache include files. If you do\r\nnot wish to do that, you may also access the headers (both input and output)\r\nusing the provided functions. There are also protocol-specific handling\r\nfunctions for selecting the desired protocol for the WebSocket session. You may\r\nonly safely access the `send` or `close` functions in your `on_connect`\r\nfunction from a separate thread, as the connection will not be completed until\r\nyou return from the function.\r\n\r\nYou may use `apxs`, SCons, or some other build system to be build and install\r\nthe plugins. Also, it does not need to be placed in the same directory as the\r\nWebSocket module.\r\n\r\n## Configuration\r\n\r\nThe `http.conf` file is used to configure WebSocket plugins to handle requests\r\nfor particular locations. Inside each `Location` block, set the handler, using\r\nthe `SetHandler` keyword, to `websocket-handler`. Next, add a\r\n`WebSocketHandler` entry that contains two parameters. The first is the name of\r\nthe dynamic plugin library that will service the requests for the specified\r\nlocation, and the second is the name of the function in the dynamic library\r\nthat will initialize the plugin. For the draft-76 implementation only, you may\r\noptionally include a flag for supporting the draft-75 version of the WebSocket\r\nprotocol (it will default to \"off\" if you do not include it). It is enabled\r\nusing the `SupportDraft75` keyword, along with a value of `On`.\r\n\r\nHere is an example of the configuration changes to `http.conf` that are used to\r\nhandle the WebSocket plugin requests directed at `/echo` under Mac OS X. The\r\nserver will initialize the module by calling the `echo_init` function in\r\n`mod_websocket_echo.so`:\r\n\r\n    LoadModule websocket_module   libexec/apache2/mod_websocket.so\r\n    LoadModule websocket_draft76_module   libexec/apache2/mod_websocket_draft76.so\r\n\r\n    <IfModule mod_websocket.c>\r\n      <Location /echo>\r\n        SetHandler websocket-handler\r\n        WebSocketHandler libexec/apache2/mod_websocket_echo.so echo_init\r\n      </Location>\r\n      <Location /dumb-increment>\r\n        SetHandler websocket-handler\r\n        WebSocketHandler libexec/apache2/mod_websocket_dumb_increment.so dumb_increment_init\r\n      </Location>\r\n    </IfModule>\r\n\r\n    <IfModule mod_websocket_draft76.c>\r\n      <Location /echo>\r\n        SetHandler websocket-handler\r\n        WebSocketHandler libexec/apache2/mod_websocket_echo.so echo_init\r\n        SupportDraft75 On\r\n      </Location>\r\n      <Location /dumb-increment>\r\n        SetHandler websocket-handler\r\n        WebSocketHandler libexec/apache2/mod_websocket_dumb_increment.so dumb_increment_init\r\n        SupportDraft75 On\r\n      </Location>\r\n    </IfModule>\r\n\r\nIf your settings are the same between the two modules, you may try to remove\r\nthe `<IfModule mod_websocket_draft76.c>` section of the configuration (you will\r\nstill need the `LoadModule` line if you want to support draft-76).\r\n\r\nSince we are dealing with messages, not streams, we need to specify a maximum\r\nmessage size. The default size is 32 megabytes. You may override this value by\r\nspecifying a `MaxMessageSize` configuration setting. This option is not\r\navailable for the draft-76 implementation. Here is an example of how to set\r\nthe maximum message size is set to 64 megabytes:\r\n\r\n    <IfModule mod_websocket.c>\r\n      <Location /echo>\r\n        SetHandler websocket-handler\r\n        WebSocketHandler /usr/lib/apache2/modules/mod_websocket_echo.so echo_init\r\n        MaxMessageSize 67108864\r\n      </Location>\r\n    </IfModule>\r\n\r\nUnder Linux, the module-specific configuration may be contained in a single\r\nfile called `/etc/apache2/mods-available/websocket.load` (your version of Linux\r\nmay vary). If you did not use `apxs2` with the `-a` option to initially\r\ncreate the module, you will have to make a link between\r\n`/etc/apache2/mods-enabled/websocket.load` and\r\n`/etc/apache2/mods-available/websocket.load`. Take a look at the already enabled\r\nmodules to see how it should look. Since the directory containing the module is\r\ndifferent from Mac OS X, the configuration will look more like this:\r\n\r\n    LoadModule websocket_module   /usr/lib/apache2/modules/mod_websocket.so\r\n    LoadModule websocket_draft76_module   /usr/lib/apache2/modules/mod_websocket_draft76.so\r\n\r\n    <IfModule mod_websocket.c>\r\n      <Location /echo>\r\n        SetHandler websocket-handler\r\n        WebSocketHandler /usr/lib/apache2/modules/mod_websocket_echo.so echo_init\r\n      </Location>\r\n    </IfModule>\r\n\r\n    <IfModule mod_websocket_draft76.c>\r\n      <Location /echo>\r\n        SetHandler websocket-handler\r\n        WebSocketHandler /usr/lib/apache2/modules/mod_websocket_echo.so echo_init\r\n        SupportDraft75 On\r\n      </Location>\r\n    </IfModule>\r\n\r\nThis is the configuration that may be overwritten when the `-a` option is\r\nincluded using `axps2`, so be careful.\r\n\r\nUnder Windows, the initialization function is of the form `_echo_init@0`, as it\r\nis using the `__stdcall` calling convention:\r\n\r\n    LoadModule websocket_module   modules/mod_websocket.so\r\n    LoadModule websocket_draft76_module   modules/mod_websocket_draft76.so\r\n\r\n    <IfModule mod_websocket.c>\r\n      <Location /echo>\r\n        SetHandler websocket-handler\r\n        WebSocketHandler modules/mod_websocket_echo.so _echo_init@0\r\n      </Location>\r\n    </IfModule>\r\n\r\n    <IfModule mod_websocket_draft76.c>\r\n      <Location /echo>\r\n        SetHandler websocket-handler\r\n        WebSocketHandler modules/mod_websocket_echo.so _echo_init@0\r\n        SupportDraft75 On\r\n      </Location>\r\n    </IfModule>\r\n\r\nFor all architectures, to drop draft-76 support, remove the loading of the\r\ndraft-76 module along with the module configuration block. Here is how the\r\nexample configuration could look under Mac OS X after removing the the\r\n`websocket_draft76_module` references:\r\n\r\n    LoadModule websocket_module   libexec/apache2/mod_websocket.so\r\n\r\n    <IfModule mod_websocket.c>\r\n      <Location /echo>\r\n        SetHandler websocket-handler\r\n        WebSocketHandler libexec/apache2/mod_websocket_echo.so echo_init\r\n      </Location>\r\n    </IfModule>\r\n\r\n## Authors\r\n\r\n* The original code was written by `self.disconnect`.\r\n\r\n## License\r\n\r\nPlease see the file called LICENSE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}